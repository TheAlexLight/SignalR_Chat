<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:ChatClient.Converters"
                    xmlns:extensions="clr-namespace:ChatClient.Extensions"
                    xmlns:helpers="clr-namespace:ChatClient.Helpers"
                    xmlns:viewmodels="clr-namespace:ChatClient.ViewModels"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/ChatClient;component/Resources/Images/Mute.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/ChatClient;component/Resources/Images/ThreeDots.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/ChatClient;component/Resources/Images/MessageStatus.xaml"/>
        <ResourceDictionary Source="Menu.xaml"/>
        <ResourceDictionary Source="ToolBar.xaml"/>
        <ResourceDictionary Source="ScrollBar.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <converters:MultiValueEqualityConverter x:Key="equalityConverter"/>
    <converters:ByteToImageConverter x:Key="byteToImageConverter"/>
    <converters:MessageStatusToImageConverter x:Key="messageStatusToImageConverter"/>
    <converters:UncheckedMessagesConverter x:Key="uncheckedMessagesConverter"/>

    <LinearGradientBrush x:Key="mainMessageBoxColors" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#E6E7FF" Offset="0"/>
        <GradientStop Color="#F0F0FF" Offset="0.2"/>
        <GradientStop Color="#F0F0FF" Offset="0.4"/>
        <GradientStop Color="#F0F0FF" Offset="0.6"/>
        <GradientStop Color="#F0F0FF" Offset="0.8"/>
        <GradientStop Color="#E6E7FF" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="usersListBox" x:Name="usersListBox" TargetType="{x:Type ListBox}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="SelectedIndex" Value="0"/>
        <Setter Property="Background" Value="{StaticResource mainMessageBoxColors}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ScrollViewer Background="{StaticResource mainMessageBoxColors}">
                        <ItemsPresenter/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem }">
                    <Style.Triggers>
                        <DataTrigger Binding ="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=HasItems}" 
                                                    Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ListBox ItemsSource="{Binding GroupedUsers}"
                             Margin="-15,-5,-10,-5"
                             BorderThickness="0"
                             Background="#F0F0FF"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Background="#F0F0FF">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>
                                    <DockPanel  Background="#F0F0FF" Name="dockPanel">
                                        <Border CornerRadius="25" 
                                                BorderBrush="DarkRed" 
                                                BorderThickness="2.5"
                                    Width="29" 
                                    Height="29"
                                            Name="userActiveBorder">
                                            <Ellipse >
                                                <Ellipse.Fill>
                                                    <ImageBrush ImageSource="{Binding UserProfile.Image, Converter={StaticResource byteToImageConverter}}"
                                                                Stretch="UniformToFill"/>
                                                </Ellipse.Fill>
                                            </Ellipse>
                                        </Border>
                                        <Image Source="{StaticResource muteDrawingImage}" 
                                               Width="15" 
                                               Height="15"
                                               Margin="5,10,-5,5"
                                               Visibility="Collapsed"
                                               Name="muteImage"/>
                                        <TextBlock Text="{Binding UserProfile.Username}"
                                                   Foreground="{Binding UserProfile.UsernameColor}"
                                                   Margin="10,0,0,0"
                                                   FontSize="22"
                                                   Background="#F0F0FF"
                                                   TextTrimming="CharacterEllipsis"
                                                   Name="UsernameText"/>

                                    </DockPanel>
                                    <Menu Style="{StaticResource userMenu}" 
                              Grid.Column="1"
                                          Name="menu">
                                        <MenuItem Style="{StaticResource userMenuItem}"
                                                  Width="30"
                                                  Height="30"
                                                  HorizontalAlignment="Center"
                                                  HorizontalContentAlignment="Center">
                                            <MenuItem.Header>
                                                <Image Source="{StaticResource threeDotsDrawingImage}"
                                                       Width="25"
                                                       Height="25"
                                                       Stretch="Fill"
                                                       Margin="-3"/>
                                            </MenuItem.Header>
                                            <MenuItem Header="Ban" Style="{StaticResource banMenuItem}">
                                                <MenuItem Header="10 min" 
                                                              viewmodels:ChatViewModel.DurationTime="10"
                                                              Style="{StaticResource banMenuItem}">
                                                </MenuItem>
                                                <MenuItem Header="20 min" 
                                                              viewmodels:ChatViewModel.DurationTime="20"
                                                              Style="{StaticResource banMenuItem}"/>
                                                <MenuItem Header="30 min" 
                                                              viewmodels:ChatViewModel.DurationTime="30"
                                                              Style="{StaticResource banMenuItem}"/>
                                                <MenuItem Header="60 min" 
                                                              viewmodels:ChatViewModel.DurationTime="60"
                                                              Style="{StaticResource banMenuItem}"/>
                                                <MenuItem Header="Permanent"
                                                              viewmodels:ChatViewModel.DurationTime="Permanent"
                                                              Style="{StaticResource banMenuItem}"/>
                                            </MenuItem>
                                            <MenuItem Style="{StaticResource baseMenuItem}"
                                                      Header="Kick"
                                                      Command="{Binding RelativeSource={RelativeSource AncestorType= {x:Type UserControl}}, Path=DataContext.KickUserCommand}"
                                                      CommandParameter="{Binding ElementName=activeUsersListBox,Path=SelectedItem}"/>
                                            <MenuItem Header="Mute" Style="{StaticResource muteMenuItem}">
                                                <MenuItem Header="10 min" 
                                                          viewmodels:ChatViewModel.DurationTime="10"
                                                          Style="{StaticResource muteMenuItem}">
                                                </MenuItem>
                                                <MenuItem Header="20 min" 
                                                          viewmodels:ChatViewModel.DurationTime="20"
                                                          Style="{StaticResource muteMenuItem}"/>
                                                <MenuItem Header="30 min" 
                                                          viewmodels:ChatViewModel.DurationTime="30"
                                                          Style="{StaticResource muteMenuItem}"/>
                                                <MenuItem Header="60 min" 
                                                          viewmodels:ChatViewModel.DurationTime="60"
                                                          Style="{StaticResource banMenuItem}"/>
                                                <MenuItem Header="Permanent"
                                                          viewmodels:ChatViewModel.DurationTime="Permanent"
                                                          Style="{StaticResource banMenuItem}"/>
                                            </MenuItem>
                                        </MenuItem>
                                    </Menu>
                                </Grid>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.MuteStatus.IsMuted}" Value="True">
                                        <Setter Property="Visibility" TargetName="muteImage" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding UserProfile.IsOnline}" Value="True">
                                        <Setter Property="BorderBrush" TargetName="userActiveBorder" Value="Green"/>
                                    </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="dockPanel"
                                                Property="Background"
                                                Value="#C3D7F2"/>
                                        <Setter TargetName="menu"
                                                Property="Background"
                                                Value="#C3D7F2"/>
                                        <Setter TargetName="UsernameText"
                                                Property="Background"
                                                Value="#C3D7F2"/>
                                    </Trigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.Style>
                            <Style TargetType="{x:Type ListBox}"
           BasedOn="{StaticResource {x:Type ListBox}}">
                                <Style.Triggers>
                                    <!-- Use ListBox.HasItems instead of Binding -->
                                    <Trigger Property="HasItems" Value="False">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Style>
                    </ListBox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="privateUsersListBox" TargetType="{x:Type ListBox}">
        <Setter Property="ItemsSource" Value="{Binding AllUsers}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="SelectedIndex" Value="{Binding SelectedUserIndex}"/>
        <Setter Property="SelectedItem" Value="{Binding SelectedItem, Mode=TwoWay}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ScrollViewer Background="{StaticResource mainMessageBoxColors}">
                        <ItemsPresenter/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <DockPanel Grid.Column="0">
                            <Border CornerRadius="25"  
                                    Width="30" 
                                    Height="30"
                                Name="userActiveBorder"
                                BorderBrush="DarkRed"
                                BorderThickness="2.5">
                                <Ellipse >
                                    <Ellipse.Fill>
                                        <ImageBrush ImageSource="{Binding UserProfile.Image, Converter={StaticResource byteToImageConverter}}"
                                                                Stretch="UniformToFill"/>
                                    </Ellipse.Fill>
                                </Ellipse>
                            </Border>
                            <TextBlock Text="{Binding UserProfile.Username}"
                                       Foreground="{Binding UserProfile.UsernameColor}"
                                       Margin="10,0,10,0"
                                       FontSize="22"
                                       Name="userTextBlock"
                                       TextTrimming="CharacterEllipsis"
                                       Grid.Column="0"/>
                        </DockPanel>
                        <!--<Image Source="{StaticResource checkedDrawingImage}"
                               Grid.Column="1"/>-->
                        <TextBlock Grid.Column="1">
                            <TextBlock.Text>
                                <MultiBinding FallbackValue="" Converter="{StaticResource uncheckedMessagesConverter}" 
                                              UpdateSourceTrigger="PropertyChanged">
                                    <Binding Path="." Mode="TwoWay"/>
                                    <Binding Path="DataContext.CurrentUser" 
                                             RelativeSource="{RelativeSource AncestorType={x:Type UserControl}}"/>
                                    <Binding Path="DataContext.NeedToUpdateMessagesCount" 
                                             RelativeSource="{RelativeSource AncestorType={x:Type UserControl}}"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock><!--="{Binding ., Converter={ StaticResource uncheckedMessagesConverter}}"/>-->
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding UserProfile.IsOnline}" Value="True">
                            <Setter Property="BorderBrush" TargetName="userActiveBorder" Value="Green"/>
                        </DataTrigger>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource equalityConverter}">
                                    <Binding RelativeSource="{RelativeSource Self}" 
                                             Path="DataContext.UserProfile.Username"/>
                                    <Binding RelativeSource="{RelativeSource AncestorType={x:Type ListBox}}"
                                             Path="DataContext.CurrentUser.UserProfile.Username"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter Property="Visibility"  Value="Collapsed"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="messagesListBox" x:Name="messagesList" TargetType="{x:Type ItemsControl}">
        <Setter Property="ItemsSource" Value="{Binding CurrentChatGroup.MessagesViewModel}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Background" Value="{StaticResource mainMessageBoxColors}"/>
        <Setter Property="BorderThickness" Value="0,1,0,1"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="extensions:DropFilesBehaviorExtension.IsEnabled" Value="True"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsVirtualizing="True"
                              VirtualizationMode="Recycling" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <extensions:ScrollViewerExtension 
                        Background="{StaticResource mainMessageBoxColors}"
                        HorizontalScrollBarVisibility="Disabled"
                        Template="{StaticResource scrollViewerControlTemplate}"
                        x:Name="scroll"
                        CanContentScroll="True">
                        <ItemsPresenter/>
                    </extensions:ScrollViewerExtension>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border CornerRadius="5"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Margin="5"
                            Padding="5"
                            Background="#CACCE9"
                            MaxWidth="400"
                            HorizontalAlignment="Left">
                        <DockPanel Name="dockPanel"
                               Background="Transparent">
                            <i:Interaction.Triggers>
                                <i:EventTrigger  EventName="ScrollChanged"
                                             SourceObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type extensions:ScrollViewerExtension}}}"
                                             SourceName="scroll">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}
                                            , Path=DataContext.MessageReadCommand}">
                                        <i:InvokeCommandAction.CommandParameter>
                                            <MultiBinding Converter="{StaticResource multiBindingConverter}">
                                                <Binding Path="."/>
                                                <Binding ElementName="dockPanel"/>
                                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}"/>
                                                <Binding Source="2"/>
                                            </MultiBinding>
                                        </i:InvokeCommandAction.CommandParameter>
                                    </i:InvokeCommandAction>
                                </i:EventTrigger>
                                <!--<i:EventTrigger  EventName="Loaded">
                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}
                                            , Path=DataContext.MessageLoadedCommand}">
                                    <i:InvokeCommandAction.CommandParameter>
                                        <MultiBinding Converter="{StaticResource multiBindingConverter}">
                                            <Binding Path="."/>
                                            <Binding ElementName="dockPanel"/>
                                            <Binding Source="2"/>
                                        </MultiBinding>
                                    </i:InvokeCommandAction.CommandParameter>
                                </i:InvokeCommandAction>
                            </i:EventTrigger>-->
                                <i:EventTrigger  EventName="Loaded"
                                             SourceObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type extensions:ScrollViewerExtension}}}"
                                             SourceName="scroll">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}
                                            , Path=DataContext.MessageReadCommand}">
                                        <i:InvokeCommandAction.CommandParameter>
                                            <MultiBinding Converter="{StaticResource multiBindingConverter}">
                                                <Binding Path="."/>
                                                <Binding ElementName="dockPanel"/>
                                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}"/>
                                                <Binding Source="2"/>
                                            </MultiBinding>
                                        </i:InvokeCommandAction.CommandParameter>
                                    </i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Border CornerRadius="25" 
                                BorderThickness="2.5"
                                    Width="30" 
                                    Height="30">
                                <Ellipse >
                                    <Ellipse.Fill>
                                        <ImageBrush ImageSource="{Binding MessageModel.UserModel.UserProfile.Image, Converter={StaticResource byteToImageConverter}}"
                                                                Stretch="UniformToFill"/>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="BorderBrush" Value="DarkRed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding MessageModel.UserModel.UserProfile.IsOnline}" Value="True">
                                                <Setter Property="BorderBrush" Value="Green"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                            <DockPanel>
                                <StackPanel Orientation="Horizontal"
                                        DockPanel.Dock="Top">
                                    <TextBlock Text="{Binding Path=MessageModel.UserModel.UserProfile.Username}"
                                       Foreground="{Binding Path=MessageModel.UserModel.UserProfile.UsernameColor}"
                                       Margin="10,0,5,0"
                                       FontSize="18"/>
                                    <TextBlock Text="{Binding Path=MessageModel.Time}"
                                           FontSize="11"
                                           Margin="0,5,0,0"
                                           Foreground="#848484"
                                           FontWeight="SemiBold"/>
                                    <Image Source="{Binding MessageModel.CheckStatus
                                    , Converter={StaticResource messageStatusToImageConverter}}"
                                       Width="15"
                                       Height="15"
                                       Margin="5,0,0,0"/>
                                </StackPanel>
                                <StackPanel>
                                    <TextBlock
                                       x:Name="textMessage"
                                       Margin="10,-5,0,0"
                                       Foreground="Black"
                                       FontSize="20"
                                       TextWrapping="Wrap"
                                       HorizontalAlignment="Left"
                                       Visibility="Collapsed"
                                       helpers:HyperlinksDetetectionHelper.Text="{Binding MessageModel.Message.TextMessage, Mode=TwoWay}"/>
                                    <DockPanel Visibility="{Binding HyperlinkPanelVisibility}">
                                        <Rectangle Width="3"
                                               Fill="#9193B2"
                                               Margin="5,0,0,0"/>
                                        <StackPanel>
                                            <TextBlock Text="{Binding MessageModel.HyperlinkDescriptionModel.HyperlinkTitle}"
                                                       FontWeight="DemiBold"
                                                       Margin="10,5,0,0"
                                                       FontSize="18"/>
                                            <TextBlock TextWrapping="Wrap"
                                           Margin="10,0,10,5"
                                               FontSize="16"
                                               Text="{Binding MessageModel.HyperlinkDescriptionModel.HyperlinkDescription}"
                                                       helpers:HyperlinksDetetectionHelper.Text="{Binding MessageModel.HyperlinkDescriptionModel.HyperlinkDescription}"/>
                                            <Image Source="{Binding MessageModel.HyperlinkDescriptionModel.HyperlinkImage, Converter={StaticResource byteToImageConverter}}"
                                       MaxHeight="250"
                                       MaxWidth="250"
                                       HorizontalAlignment="Left"
                                       Margin="10,0,10,5"/>
                                        </StackPanel>
                                    </DockPanel>
                                </StackPanel>
                                <Image x:Name="imageMessage" 
                                   Source="{Binding MessageModel.Message.ImageMessage, Converter={StaticResource byteToImageConverter}}"
                                   MaxHeight="300"
                                   MaxWidth="300"
                                   Visibility="Collapsed"
                                   HorizontalAlignment="Left"/>
                            </DockPanel>
                        </DockPanel>
                    </Border>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding MessageModel.MessageInformationType}" Value="Text">
                            <Setter TargetName="textMessage" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding MessageModel.MessageInformationType}" Value="Image">
                            <Setter TargetName="imageMessage" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>