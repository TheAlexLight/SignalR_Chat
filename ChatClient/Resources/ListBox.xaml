<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:ChatClient.Converters"
                    xmlns:extensions="clr-namespace:ChatClient.Extensions"
                    xmlns:viewmodels="clr-namespace:ChatClient.ViewModels"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/ChatClient;component/Resources/Images/Mute.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/ChatClient;component/Resources/Images/ThreeDots.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/ChatClient;component/Resources/Images/MessageStatus.xaml"/>
        <ResourceDictionary Source="Menu.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <!--<ResourceDictionary x:Key="iconsDictionary">
        <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary x:Name="iconMute" Source="pack://application:,,,/ChatClient;component/Resources/Images/Mute.xaml"/>
        </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>-->

    <converters:MessageLineNormalizeConverter x:Key="normalizedMessage"/>
    <converters:MultiValueEqualityConverter x:Key="equalityConverter"/>
    <converters:ByteToImageConverter x:Key="byteToImageConverter"/>
    <converters:MessageStatusToImageConverter x:Key="messageStatusToImageConverter"/>

    <LinearGradientBrush x:Key="mainMessageBoxColors" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#E6E7FF" Offset="0"/>
        <GradientStop Color="#F0F0FF" Offset="0.2"/>
        <GradientStop Color="#F0F0FF" Offset="0.4"/>
        <GradientStop Color="#F0F0FF" Offset="0.6"/>
        <GradientStop Color="#F0F0FF" Offset="0.8"/>
        <GradientStop Color="#E6E7FF" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="usersListBox" x:Name="usersListBox" TargetType="{x:Type ListBox}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="SelectedIndex" Value="0"/>
        <Setter Property="Background" Value="{StaticResource mainMessageBoxColors}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem }">
                    <Style.Triggers>
                        <DataTrigger Binding ="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=HasItems}" 
                                                    Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ListBox ItemsSource="{Binding GroupedUsers}"
                             Margin="-15,-5,-10,-5"
                             BorderThickness="0"
                             Background="#F0F0FF"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Background="#F0F0FF">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>
                                    <DockPanel  Background="#F0F0FF" Name="dockPanel">
                                        <Border CornerRadius="25" 
                                                BorderBrush="DarkRed" 
                                                BorderThickness="2.5"
                                    Width="29" 
                                    Height="29"
                                            Name="userActiveBorder">
                                            <Ellipse >
                                                <Ellipse.Fill>
                                                    <ImageBrush ImageSource="{Binding UserProfile.Image, Converter={StaticResource byteToImageConverter}}"
                                                                Stretch="UniformToFill"/>
                                                </Ellipse.Fill>
                                            </Ellipse>
                                        </Border>
                                        <Image Source="{StaticResource muteDrawingImage}" 
                                               Width="15" 
                                               Height="15"
                                               Margin="5,10,-5,5"
                                               Visibility="Collapsed"
                                               Name="muteImage"/>
                                        <TextBlock Text="{Binding UserProfile.Username}"
                                                   Foreground="{Binding UserProfile.UsernameColor}"
                                                   Margin="10,0,0,0"
                                                   FontSize="22"
                                                   Background="#F0F0FF"
                                                   TextTrimming="CharacterEllipsis"
                                                   Name="UsernameText"/>
  
                                    </DockPanel>
                                    <Menu Style="{StaticResource userMenu}" 
                              Grid.Column="1"
                                          Name="menu">
                                        <MenuItem Style="{StaticResource userMenuItem}"
                                                  Width="30"
                                                  Height="30"
                                                  HorizontalAlignment="Center"
                                                  HorizontalContentAlignment="Center">
                                            <MenuItem.Header>
                                                <Image Source="{StaticResource threeDotsDrawingImage}"
                                                       Width="25"
                                                       Height="25"
                                                       Stretch="Fill"
                                                       Margin="-3"/>
                                            </MenuItem.Header>
                                            <MenuItem Header="Ban" Style="{StaticResource banMenuItem}">
                                                <MenuItem Header="10 min" 
                                                              viewmodels:ChatViewModel.DurationTime="10"
                                                              Style="{StaticResource banMenuItem}">
                                                </MenuItem>
                                                <MenuItem Header="20 min" 
                                                              viewmodels:ChatViewModel.DurationTime="20"
                                                              Style="{StaticResource banMenuItem}"/>
                                                <MenuItem Header="30 min" 
                                                              viewmodels:ChatViewModel.DurationTime="30"
                                                              Style="{StaticResource banMenuItem}"/>
                                                <MenuItem Header="60 min" 
                                                              viewmodels:ChatViewModel.DurationTime="60"
                                                              Style="{StaticResource banMenuItem}"/>
                                                <MenuItem Header="Permanent"
                                                              viewmodels:ChatViewModel.DurationTime="Permanent"
                                                              Style="{StaticResource banMenuItem}"/>
                                            </MenuItem>
                                            <MenuItem Style="{StaticResource baseMenuItem}"
                                                      Header="Kick"
                                                      Command="{Binding RelativeSource={RelativeSource AncestorType= {x:Type UserControl}}, Path=DataContext.KickUserCommand}"
                                                      CommandParameter="{Binding ElementName=activeUsersListBox,Path=SelectedItem}"/>
                                            <MenuItem Header="Mute" Style="{StaticResource muteMenuItem}">
                                                <MenuItem Header="10 min" 
                                                          viewmodels:ChatViewModel.DurationTime="10"
                                                          Style="{StaticResource muteMenuItem}">
                                                </MenuItem>
                                                <MenuItem Header="20 min" 
                                                          viewmodels:ChatViewModel.DurationTime="20"
                                                          Style="{StaticResource muteMenuItem}"/>
                                                <MenuItem Header="30 min" 
                                                          viewmodels:ChatViewModel.DurationTime="30"
                                                          Style="{StaticResource muteMenuItem}"/>
                                                <MenuItem Header="60 min" 
                                                          viewmodels:ChatViewModel.DurationTime="60"
                                                          Style="{StaticResource banMenuItem}"/>
                                                <MenuItem Header="Permanent"
                                                          viewmodels:ChatViewModel.DurationTime="Permanent"
                                                          Style="{StaticResource banMenuItem}"/>
                                            </MenuItem>
                                        </MenuItem>
                                    </Menu>
                                </Grid>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.MuteStatus.IsMuted}" Value="True">
                                        <Setter Property="Visibility" TargetName="muteImage" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding UserProfile.IsOnline}" Value="True">
                                        <Setter Property="BorderBrush" TargetName="userActiveBorder" Value="Green"/>
                                    </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="dockPanel"
                                                Property="Background"
                                                Value="#C3D7F2"/>
                                        <Setter TargetName="menu"
                                                Property="Background"
                                                Value="#C3D7F2"/>
                                        <Setter TargetName="UsernameText"
                                                Property="Background"
                                                Value="#C3D7F2"/>
                                    </Trigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.Style>
                            <Style TargetType="{x:Type ListBox}"
           BasedOn="{StaticResource {x:Type ListBox}}">
                                <Style.Triggers>
                                    <!-- Use ListBox.HasItems instead of Binding -->
                                    <Trigger Property="HasItems" Value="False">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Style>
                    </ListBox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="privateUsersListBox" TargetType="{x:Type ListBox}">
        <Setter Property="ItemsSource" Value="{Binding AllUsers}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="SelectedIndex" Value="{Binding SelectedUserIndex}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ScrollViewer extensions:ScrollViewerExtension.AlwaysScrollToEnd="True">
                        <Grid Background="{StaticResource mainMessageBoxColors}">
                            <ItemsPresenter/>
                        </Grid>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <DockPanel Grid.Column="0">
                            <Border CornerRadius="25"  
                                    Width="30" 
                                    Height="30"
                                Name="userActiveBorder"
                                BorderBrush="DarkRed"
                                BorderThickness="2.5">
                                <Ellipse >
                                    <Ellipse.Fill>
                                        <ImageBrush ImageSource="{Binding UserProfile.Image, Converter={StaticResource byteToImageConverter}}"
                                                                Stretch="UniformToFill"/>
                                    </Ellipse.Fill>
                                </Ellipse>
                            </Border>
                            <TextBlock Text="{Binding UserProfile.Username}"
                                       Foreground="{Binding UserProfile.UsernameColor}"
                                       Margin="10,0,10,0"
                                       FontSize="22"
                                       Name="userTextBlock"
                                       TextTrimming="CharacterEllipsis"
                                       Grid.Column="0"/>
                        </DockPanel>
                        <Image Source="{StaticResource checkedDrawingImage}"
                               Grid.Column="1"/>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding UserProfile.IsOnline}" Value="True">
                            <Setter Property="BorderBrush" TargetName="userActiveBorder" Value="Green"/>
                        </DataTrigger>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource equalityConverter}">
                                    <Binding RelativeSource="{RelativeSource Self}" 
                                             Path="DataContext.UserProfile.Username"/>
                                    <Binding RelativeSource="{RelativeSource AncestorType={x:Type ListBox}}"
                                             Path="DataContext.CurrentUser.UserProfile.Username"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter Property="Visibility"  Value="Collapsed"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="messagesListBox" TargetType="{x:Type ListBox}" BasedOn="{StaticResource usersListBox}">
        <Setter Property="ItemsSource" Value="{Binding CurrentChatGroup.Messages}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="Background" Value="{StaticResource mainMessageBoxColors}"/>
        <Setter Property="BorderThickness" Value="0,1,0,1"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Border CornerRadius="25" 
                                BorderThickness="2.5"
                                    Width="30" 
                                    Height="30">
                            <Ellipse >
                                <Ellipse.Fill>
                                    <ImageBrush ImageSource="{Binding UserModel.UserProfile.Image, Converter={StaticResource byteToImageConverter}}"
                                                                Stretch="UniformToFill"/>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="BorderBrush" Value="DarkRed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding UserModel.UserProfile.IsOnline}" Value="True">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <StackPanel Width="400">
                            <StackPanel Orientation="Horizontal">
                                <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}
                                            , Path=DataContext.ElementLoadedCommand}"
                                                               CommandParameter="{Binding }"/>
                                </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBlock Text="{Binding Path=UserModel.UserProfile.Username}"
                                       Foreground="{Binding Path=UserModel.UserProfile.UsernameColor}"
                                       Margin="10,0,5,0"
                                       FontSize="18"/>
                                <TextBlock Text="{Binding Path=Time}"
                                           FontSize="11"
                                           Margin="0,6,0,0"
                                           Foreground="#848484"
                                           FontWeight="SemiBold"/>
                                <Image Source="{Binding CheckStatus
                                    , Converter={StaticResource messageStatusToImageConverter}
                                    , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       Width="15"
                                       Height="15"
                                       Margin="5,0,0,0"/>
                            </StackPanel>
                            <TextBlock Text="{Binding Message}"
                                       x:Name="message"
                                   Margin="10,-5,0,0"
                                       Foreground="Black"
                                       FontSize="20"
                                       MaxWidth="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollViewer}}, Path=ActualWidth
                                                , Converter={StaticResource normalizedMessage}}"
                                       TextWrapping="Wrap"
                                       HorizontalAlignment="Left"/>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>